pop_long %?% View()
pop_long %>% View()
combined_data <- gdp_long %>%
left_join(pop_long, by = c("region", "year"))
combined_data
gdp_per_capita <- combined_data %>%
mutate(gdp_per_capita = gdp / population) %>%
arrange(region, year)
growth_rates <- gdp_per_capita %>%
group_by(region) %>%
summarize(
gdp_per_capita_1999 = first(gdp_per_capita),
gdp_per_capita_2019 = last(gdp_per_capita),
total_growth = (gdp_per_capita_2019 / gdp_per_capita_1999 - 1) * 100
) %>%
arrange(desc(total_growth))
growth_rates
# Calculate national average growth
national_avg_growth <- mean(growth_rates$total_growth)
national_avg_growth
combined_data
combined_data %>% is.na() %>% sum()
pop_long %>% is.na() %>% sum()
pop_GDP %>% is.na() %>% sum()
GDP_long %>% is.na() %>% sum()
gdp_long %>% is.na() %>% sum()
# Read GDP and Population data
gdp_data <- read_excel("External_GDP_Pop_Data.xlsx", sheet = "GDP")
pop_data <- read_excel("External_GDP_Pop_Data.xlsx", sheet = "Population")
# Convert both datasets to long format
gdp_long <- gdp_data %>%
pivot_longer(
cols = -'...1',
names_to = "year",
values_to = "gdp"
) %>%
rename(region = '...1')
pop_long <- pop_data %>%
pivot_longer(
cols = -'...1',
names_to = "year",
values_to = "population"
) %>%
rename(region = '...1')
# Join GDP and population data
combined_data <- gdp_long %>%
left_join(pop_long, by = c("region", "year"))
# Calculate GDP per capita
gdp_per_capita <- combined_data %>%
mutate(gdp_per_capita = gdp / population) %>%
arrange(region, year)
# Calculate growth rates (1999-2019)
growth_rates <- gdp_per_capita %>%
group_by(region) %>%
summarize(
gdp_per_capita_1999 = first(gdp_per_capita),
gdp_per_capita_2019 = last(gdp_per_capita),
total_growth = (gdp_per_capita_2019 / gdp_per_capita_1999 - 1) * 100
) %>%
arrange(desc(total_growth))
# Calculate national average growth
national_avg_growth <- mean(growth_rates$total_growth)
# Add relative growth compared to national average
growth_rates <- growth_rates %>%
mutate(
relative_growth = total_growth - national_avg_growth,
growth_category = if_else(relative_growth >= 0, "Above Average", "Below Average")
)
growth_rates
head(election_data)
vox_results_2019 <- election_data %>%
filter(anno == 2019, mes == 11) %>% # focus on Novemember election again
group_by(codigo_ccaa) %>%
summarise(
total_votes = sum(votos_candidaturas, na.rm = TRUE),
vox_votes = sum(VOX, na.rm = TRUE)
) %>%
mutate(
vox_percentage = (vox_votes / total_votes) * 100
) %>%
arrange(codigo_ccaa)
election_data[1:10000,] %>% write.csv("election_data.csv")
vox_results_2019 <- election_data %>%
filter(anno == 2019, mes == 11) %>%
mutate(
party_group = case_when(
partido_2 == "VOX" ~ "VOX",
TRUE ~ "OTHER"
)
) %>%
group_by(codigo_ccaa, party_group) %>%
summarise(
votes = sum(num_votos, na.rm = TRUE),
.groups = 'drop'
) %>%
pivot_wider(
names_from = party_group,
values_from = votes,
values_fill = 0
) %>%
mutate(
total_votes = VOX + OTHER,
vox_percentage = (VOX / total_votes) * 100
)
vox_results_2019 %>% dim()
vox_results_2019
data("esp_codelist")
install.packages("mapSpain")
library(mapSpain)
data("esp_codelist")
esp_codelist
esp_codelist %>% View()
election_data$codigo_ccaa %>% unique()
ccaa_lookup <- tibble(
codigo_ccaa = c(paste0("0", 1:9), as.character(10:17), "18", "19"),
region = c("AND", "ARA", "AST", "BAL", "CAN", "CANT", "CYL", "CLM",
"CAT", "VAL", "EXT", "GAL", "MAD", "MUR", "NAV", "PV",
"RIO", "Ceuta y Mell", "Ceuta y Mell"))
# Join CCAA codes with results
vox_results_2019_named <- vox_results_2019 %>%
left_join(ccaa_lookup, by = "codigo_ccaa") %>%
group_by(region) %>%
summarise(
VOX = sum(VOX),
OTHER = sum(OTHER),
total_votes = sum(total_votes),
vox_percentage = (sum(VOX) / sum(total_votes)) * 100
) %>%
arrange(region)
print(vox_results_2019_named)
# Now join with GDP growth data
combined_analysis <- growth_rates %>%
left_join(vox_results_2019_named, by = "region") %>%
select(region, relative_growth, vox_percentage, growth_category)
# Print combined results
print("\nCombined GDP growth and VOX support analysis:")
print(combined_analysis)
# Calculate correlation
correlation <- cor(combined_analysis$relative_growth, combined_analysis$vox_percentage)
print(paste("\nCorrelation between relative GDP growth and VOX support:", round(correlation, 3)))
vox_results_2019_named
growth_rates
combined_analysis
# Load required packages
library(tidyverse)
# Read electoral data
election_data <- read.csv("election_data.csv")
# Calculate VOX results by CCAA for November 2019
vox_results_2019 <- election_data %>%
filter(anno == 2019, mes == 11) %>%
mutate(
party_group = case_when(
partido_2 == "VOX" ~ "VOX",
TRUE ~ "OTHER"
)
) %>%
group_by(codigo_ccaa, party_group) %>%
summarise(
votes = sum(num_votos, na.rm = TRUE),
.groups = 'drop'
) %>%
pivot_wider(
names_from = party_group,
values_from = votes,
values_fill = 0
) %>%
mutate(
total_votes = VOX + OTHER,
vox_percentage = (VOX / total_votes) * 100
)
# Create lookup table with official CCAA codes
ccaa_lookup <- tibble(
codigo_ccaa = c(paste0("0", 1:9), as.character(10:17), "18", "19"),
region = c("AND", "ARA", "AST", "BAL", "CAN", "CANT", "CYL", "CLM",
"CAT", "VAL", "EXT", "GAL", "MAD", "MUR", "NAV", "PV",
"RIO", "Ceuta y Mell", "Ceuta y Mell")
)
# Join CCAA codes with results and combine Ceuta and Melilla
vox_results_2019_named <- vox_results_2019 %>%
left_join(ccaa_lookup, by = "codigo_ccaa") %>%
group_by(region) %>%
summarise(
VOX = sum(VOX),
OTHER = sum(OTHER),
total_votes = sum(total_votes),
vox_percentage = (sum(VOX) / sum(total_votes)) * 100
) %>%
arrange(region)
# Print results
print("VOX electoral results by autonomous community (November 2019):")
print(vox_results_2019_named)
# Now join with GDP growth data
combined_analysis <- growth_rates %>%
filter(region != "total") %>%  # Remove the total row
left_join(vox_results_2019_named, by = "region") %>%
select(region, relative_growth, vox_percentage, growth_category)
# Print combined results
print("\nCombined GDP growth and VOX support analysis:")
print(combined_analysis)
# Calculate correlation
correlation <- cor(combined_analysis$relative_growth, combined_analysis$vox_percentage)
print(paste("\nCorrelation between relative GDP growth and VOX support:", round(correlation, 3)))
# Calculate VOX results by CCAA for November 2019
vox_results_2019 <- election_data %>%
filter(anno == 2019, mes == 11) %>%
mutate(
party_group = case_when(
partido_2 == "VOX" ~ "VOX",
TRUE ~ "OTHER"
)
) %>%
group_by(codigo_ccaa, party_group) %>%
summarise(
votes = sum(num_votos, na.rm = TRUE),
.groups = 'drop'
) %>%
pivot_wider(
names_from = party_group,
values_from = votes,
values_fill = 0
) %>%
mutate(
total_votes = VOX + OTHER,
vox_percentage = (VOX / total_votes) * 100
)
# Create lookup table with official CCAA codes
ccaa_lookup <- tibble(
codigo_ccaa = c(paste0("0", 1:9), as.character(10:17), "18", "19"),
region = c("AND", "ARA", "AST", "BAL", "CAN", "CANT", "CYL", "CLM",
"CAT", "VAL", "EXT", "GAL", "MAD", "MUR", "NAV", "PV",
"RIO", "CyMel", "CyMel")
)
# Join CCAA codes with results and combine Ceuta and Melilla
vox_results_2019_named <- vox_results_2019 %>%
left_join(ccaa_lookup, by = "codigo_ccaa") %>%
group_by(region) %>%
summarise(
VOX = sum(VOX),
OTHER = sum(OTHER),
total_votes = sum(total_votes),
vox_percentage = (sum(VOX) / sum(total_votes)) * 100
) %>%
arrange(region)
# Now join with GDP growth data
combined_analysis <- growth_rates %>%
filter(region != "total") %>%  # Remove the total row
left_join(vox_results_2019_named, by = "region") %>%
select(region, relative_growth, vox_percentage, growth_category)
# Print combined results
print("\nCombined GDP growth and VOX support analysis:")
print(combined_analysis)
# Calculate correlation (excluding NA values)
correlation <- cor(combined_analysis$relative_growth,
combined_analysis$vox_percentage,
use = "complete.obs")  # This will exclude NA values
print(paste("\nCorrelation between relative GDP growth and VOX support:", round(correlation, 3)))
ggplot(combined_analysis, aes(x = relative_growth, y = vox_percentage)) +
geom_point(aes(color = growth_category), size = 3) +
geom_text(aes(label = region), vjust = -0.5, size = 3) +
geom_smooth(method = "lm", color = "red", linetype = "dashed", se = FALSE) +
labs(
title = "Relationship between Economic Growth and VOX Support",
subtitle = "By Autonomous Community (1999-2019)",
x = "Relative GDP per Capita Growth (%)",
y = "VOX Vote Share (%)",
color = "Growth Category"
) +
theme_minimal() +
theme(
legend.position = "bottom",
plot.title = element_text(face = "bold")
)
ccaa_lookup <- tibble(
codigo_ccaa = c(paste0("0", 1:9), as.character(10:17), "18", "19"),
region = c("AND", "ARA", "AST", "BAL", "CAN", "CANT", "CYL", "CLM",
"CAT", "VAL", "EXT", "GAL", "MAD", "MUR", "NAV", "PV",
"RIO", "Ceuta y Mell", "Ceuta y Mell"))
# Join CCAA codes with results
vox_results_2019_named <- vox_results_2019 %>%
left_join(ccaa_lookup, by = "codigo_ccaa") %>%
group_by(region) %>%
summarise(
VOX = sum(VOX),
OTHER = sum(OTHER),
total_votes = sum(total_votes),
vox_percentage = (sum(VOX) / sum(total_votes)) * 100
) %>%
arrange(region)
# Now join with GDP growth data
combined_analysis <- growth_rates %>%
left_join(vox_results_2019_named, by = "region") %>%
select(region, relative_growth, vox_percentage, growth_category)
# Print combined results
print("\nCombined GDP growth and VOX support analysis:")
print(combined_analysis)
# Calculate correlation
correlation <- cor(combined_analysis$relative_growth, combined_analysis$vox_percentage)
print(paste("\nCorrelation between relative GDP growth and VOX support:", round(correlation, 3)))
# Calculate VOX results by CCAA for November 2019
vox_results_2019 <- election_data %>%
filter(anno == 2019, mes == 11) %>%
mutate(
party_group = case_when(
partido_2 == "VOX" ~ "VOX",
TRUE ~ "OTHER"
)
) %>%
group_by(codigo_ccaa, party_group) %>%
summarise(
votes = sum(num_votos, na.rm = TRUE),
.groups = 'drop'
) %>%
pivot_wider(
names_from = party_group,
values_from = votes,
values_fill = 0
) %>%
mutate(
total_votes = VOX + OTHER,
vox_percentage = (VOX / total_votes) * 100
)
# Create lookup table with official CCAA codes
ccaa_lookup <- tibble(
codigo_ccaa = c(paste0("0", 1:9), as.character(10:17), "18", "19"),
region = c("AND", "ARA", "AST", "BAL", "CAN", "CANT", "CYL", "CLM",
"CAT", "VAL", "EXT", "GAL", "MAD", "MUR", "NAV", "PV",
"RIO", "Ceuta y Mell", "Ceuta y Mell")
)
# Join CCAA codes with results and combine Ceuta and Melilla
vox_results_2019_named <- vox_results_2019 %>%
left_join(ccaa_lookup, by = "codigo_ccaa") %>%
group_by(region) %>%
summarise(
VOX = sum(VOX),
OTHER = sum(OTHER),
total_votes = sum(total_votes),
vox_percentage = (sum(VOX) / sum(total_votes)) * 100
) %>%
arrange(region)
# Print results
print("VOX electoral results by autonomous community (November 2019):")
print(vox_results_2019_named)
# Now join with GDP growth data
combined_analysis <- growth_rates %>%
left_join(vox_results_2019_named, by = "region") %>%
select(region, relative_growth, vox_percentage, growth_category)
# Print combined results
print("\nCombined GDP growth and VOX support analysis:")
print(combined_analysis)
# Calculate correlation
correlation <- cor(combined_analysis$relative_growth, combined_analysis$vox_percentage)
print(paste("\nCorrelation between relative GDP growth and VOX support:", round(correlation, 3)))
# Calculate VOX results by CCAA for November 2019
vox_results_2019 <- election_data %>%
filter(anno == 2019, mes == 11) %>%
mutate(
party_group = case_when(
partido_2 == "VOX" ~ "VOX",
TRUE ~ "OTHER"
)
) %>%
group_by(codigo_ccaa, party_group) %>%
summarise(
votes = sum(num_votos, na.rm = TRUE),
.groups = 'drop'
) %>%
pivot_wider(
names_from = party_group,
values_from = votes,
values_fill = 0
) %>%
mutate(
total_votes = VOX + OTHER,
vox_percentage = (VOX / total_votes) * 100
)
# Create lookup table with official CCAA codes
ccaa_lookup <- tibble(
codigo_ccaa = c(paste0("0", 1:9), as.character(10:17), "18", "19"),
region = c("AND", "ARA", "AST", "BAL", "CAN", "CANT", "CYL", "CLM",
"CAT", "VAL", "EXT", "GAL", "MAD", "MUR", "NAV", "PV",
"RIO", "Ceuta y Mell", "Ceuta y Mell")
)
# Join CCAA codes with results and combine Ceuta and Melilla
vox_results_2019_named <- vox_results_2019 %>%
left_join(ccaa_lookup, by = "codigo_ccaa") %>%
group_by(region) %>%
summarise(
VOX = sum(VOX),
OTHER = sum(OTHER),
total_votes = sum(total_votes),
vox_percentage = (sum(VOX) / sum(total_votes)) * 100
) %>%
arrange(region)
# Print results
print("VOX electoral results by autonomous community (November 2019):")
print(vox_results_2019_named)
# Now join with GDP growth data
combined_analysis <- growth_rates %>%
filter(region != "total") %>%  # Remove the total row
left_join(vox_results_2019_named, by = "region") %>%
select(region, relative_growth, vox_percentage, growth_category)
# Print combined results
print("\nCombined GDP growth and VOX support analysis:")
print(combined_analysis)
# Calculate correlation
correlation <- cor(combined_analysis$relative_growth, combined_analysis$vox_percentage)
print(paste("\nCorrelation between relative GDP growth and VOX support:", round(correlation, 3)))
vox_results_2019 <- election_data %>%
filter(anno == 2019, mes == 11) %>%
mutate(
party_group = case_when(
partido_2 == "VOX" ~ "VOX",
TRUE ~ "OTHER"
)
) %>%
group_by(codigo_ccaa, party_group) %>%
summarise(
votes = sum(num_votos, na.rm = TRUE),
.groups = 'drop'
) %>%
pivot_wider(
names_from = party_group,
values_from = votes,
values_fill = 0
) %>%
mutate(
total_votes = VOX + OTHER,
vox_percentage = (VOX / total_votes) * 100
)
# Create lookup table with official CCAA codes
ccaa_lookup <- tibble(
codigo_ccaa = c(paste0("0", 1:9), as.character(10:17), "18", "19"),
region = c("AND", "ARA", "AST", "BAL", "CAN", "CANT", "CYL", "CLM",
"CAT", "VAL", "EXT", "GAL", "MAD", "MUR", "NAV", "PV",
"RIO", "CyMel", "CyMel")
)
# Join CCAA codes with results and combine Ceuta and Melilla
vox_results_2019_named <- vox_results_2019 %>%
left_join(ccaa_lookup, by = "codigo_ccaa") %>%
group_by(region) %>%
summarise(
VOX = sum(VOX),
OTHER = sum(OTHER),
total_votes = sum(total_votes),
vox_percentage = (sum(VOX) / sum(total_votes)) * 100
) %>%
arrange(region)
# Now join with GDP growth data
combined_analysis <- growth_rates %>%
filter(region != "total") %>%  # Remove the total row
left_join(vox_results_2019_named, by = "region") %>%
select(region, relative_growth, vox_percentage, growth_category)
# Print combined results
print("\nCombined GDP growth and VOX support analysis:")
print(combined_analysis)
# Calculate correlation (excluding NA values)
correlation <- cor(combined_analysis$relative_growth,
combined_analysis$vox_percentage,
use = "complete.obs")  # This will exclude NA values
print(paste("\nCorrelation between relative GDP growth and VOX support:", round(correlation, 3)))
model_1 <- lm(combined_analysis$vox_percentage ~ combined_analysis$relative_growth)
summary(model_1)
combined_analysis
weighted_correlation <- with(combined_analysis,
cor.test(relative_growth, vox_percentage,
weights = total_votes)$estimate)
print(paste("\nPopulation-weighted correlation between relative GDP growth and VOX support:",
round(weighted_correlation, 3)))
# Load required packages
library(ggplot2)
# Create scatter plot with size representing population (through total votes)
ggplot(combined_analysis,
aes(x = relative_growth, y = vox_percentage)) +
geom_point(aes(color = growth_category,
size = total_votes/1000000), # Convert to millions for better legend
alpha = 0.6) +
geom_text(aes(label = region),
vjust = -0.5,
size = 3) +
geom_smooth(method = "lm",
color = "red",
linetype = "dashed",
se = FALSE,
aes(weight = total_votes)) + # Weight the regression line
labs(
title = "Relationship between Economic Growth and VOX Support",
subtitle = "By Autonomous Community (1999-2019)",
x = "Relative GDP per Capita Growth (%)",
y = "VOX Vote Share (%)",
color = "Growth Category",
size = "Population\n(millions of voters)"
) +
theme_minimal() +
theme(
legend.position = "right",
plot.title = element_text(face = "bold")
) +
scale_size_continuous(
range = c(2, 10),  # Adjust point size range
breaks = c(1, 2, 3, 4, 5)  # Show breaks in millions
)
getwd()
list.files()
gdp_data <- read_excel("data/raw/External_GDP_Pop_Data.xlsx", sheet = "GDP")
getwd()
gdp_data <- read_excel("R/data/raw/External_GDP_Pop_Data.xlsx", sheet = "GDP")
gert::git_add(".")
gert:git_commit("Add third original exercise and data")
library(gert)
gert::git_commit("Add third original exercise and data")
gert::git_push()
q()
